import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.Arrays;
import  java.util.List;
import static org.evomaster.test.utils.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
*  This file was automatically generated by EvoMaster on 2025-05-26T12:29:09.561-03:00[America/Buenos_Aires]
 * <br>
*  The generated test suite contains 5 tests
 * <br>
*  Covered targets: 26
 * <br>
*  Used time: 0h 1m 13s
 * <br>
*  Needed budget for current results: 100%
 * <br>
*  This file contains test cases that represent successful calls.
*/
public class EvoMaster_successes_Test {

    
    private static String baseUrlOfSut = "https://petstore3.swagger.io";
    
    
    @BeforeAll
    public static void initClass() {
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    
    
    
    
    
    
    /**
    * Calls:
    * (200) DELETE:/api/v3/store/order/{orderId}
    */
    @Test @Timeout(60)
    public void test_0() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v3/store/order/67")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (200) POST:/api/v3/pet
    * Using 1 example:
    *   doggie
    */
    @Test @Timeout(60)
    public void test_1() throws Exception {
        
        given().accept("application/json")
                .contentType("application/x-www-form-urlencoded")
                .body("id=175&name=doggie&photoUrls=%5B%22PP%22%2C+%222%22%5D&tags=%5B%7B%22id%22%3A907%2C+%22name%22%3A%22BXnm8oBb5N60NBlS%22%7D%2C+%7B%22id%22%3A169%7D%2C+%7B%22id%22%3A968%7D%2C+%7B%22id%22%3A-1768318715306585328%7D%2C+%7B%22id%22%3A768%2C+%22name%22%3A%22INJh50%22%7D%5D&status=available")
                .post(baseUrlOfSut + "/api/v3/pet")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'name'", containsString("doggie"))
                .body("'photoUrls'.size()", equalTo(0))
                .body("'tags'.size()", equalTo(4))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("'status'", containsString("available"));
    }
    
    
    /**
    * Calls:
    * (200) DELETE:/api/v3/store/order/{orderId}
    */
    @Test @Timeout(60)
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .delete(baseUrlOfSut + "/api/v3/store/order/-1888459005")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v3/user/login
    */
    @Test @Timeout(60)
    public void test_3() throws Exception {
        
        given().accept("application/xml")
                .get(baseUrlOfSut + "/api/v3/user/login?password=AmVbhdIS")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/xml");
    }
    
    
    /**
    * Calls:
    * (200) GET:/api/v3/pet/findByStatus
    */
    @Test @Timeout(60)
    public void test_4() throws Exception {
        
        given().accept("application/json")
                .get(baseUrlOfSut + "/api/v3/pet/findByStatus?status=pending")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(11))
                .body("[0].'category'.'name'", containsString("4;"))
                .body("[0].'name'", containsString("h'!LL(bYeD_+q+:?/7FuOYKPh7sZ%"))
                .body("[0].'photoUrls'.size()", equalTo(1))
                .body("[0].'photoUrls'", hasItems("l0>XHV~_/m%1%l<Vwu1WL{!+-oGY,//AQ,"))
                .body("[0].'tags'.size()", equalTo(8))
                .body("[0].'tags'[0].'name'", containsString("E_KH-zB4~tX*#Kd$B#k8UT4/ufqGwHKPU8$}yGY)1D4aQ#-aSc/lynOp~(v;h"))
                .body("[0].'tags'[1].'name'", containsString("-^?!.bL("))
                .body("[0].'tags'[2].'name'", containsString("W*e-yDS^To[mnlr&Lg}rbw0V/'(uh?&?55V[I=(#7"))
                // Skipping assertions on the remaining 5 elements. This limit of 3 elements can be increased in the configurations
                .body("[0].'status'", containsString("pending"))
                .body("[1].'category'.'name'", containsString("4;"))
                .body("[1].'name'", containsString("h'!LL(bYeD_+q+:?/7FuOYKPh7sZ%"))
                .body("[1].'photoUrls'.size()", equalTo(1))
                .body("[1].'photoUrls'", hasItems("m%1%l<Vwu1WL{!+-oGY,//AQ,Kin(U5,4J|+L_AM9pFw.m>S<.=x#8kGKKxFR<Zy"))
                .body("[1].'tags'.size()", equalTo(8))
                .body("[1].'tags'[0].'name'", containsString("E_KH-zB4~tX*#Kd$B#k8UT4/ufqGwHKPU8$}yGY)1D4aQ#-aSc/lynOp~(v;h"))
                .body("[1].'tags'[1].'name'", containsString("-^?!.bL("))
                .body("[1].'tags'[2].'name'", containsString("W*e-yDS^To[mnlr&Lg}rbw0V/'(uh?&?55V[I=(#7"))
                // Skipping assertions on the remaining 5 elements. This limit of 3 elements can be increased in the configurations
                .body("[1].'status'", containsString("pending"))
                .body("[2].'category'.'name'", containsString("&_SvYFscR#FP9zaLy(TR8Y&mi'PVIRjjp4oam(Ow79#$a[C]N~oS34rq|nE2BOSz"))
                .body("[2].'name'", containsString("#|1M0Y039dRo`4MBV0epf"))
                .body("[2].'photoUrls'.size()", equalTo(0))
                .body("[2].'tags'.size()", equalTo(4))
                .body("[2].'tags'[0].'name'", containsString(""))
                .body("[2].'tags'[1].'name'", containsString("{aDX_z}jxI4$H>Sg/(-1|ysma^}0#&G(5(]I:AjraWWGb;-pqHqi_(+)}J/:9"))
                .body("[2].'tags'[2].'name'", containsString("Gl_Pbtj7y]4Zm9C6VV!!;tHe;Nk[P96U1R$As^9"))
                // Skipping assertions on the remaining 1 elements. This limit of 3 elements can be increased in the configurations
                .body("[2].'status'", containsString("pending"))
                ; // Skipping assertions on the remaining 8 elements. This limit of 3 elements can be increased in the configurations
    }


}
